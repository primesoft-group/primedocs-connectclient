<UserControl x:Class="PrimeDocs.ConnectClient.WinApp.Views.Shell"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:data ="clr-namespace:PrimeDocs.ConnectClient.WinApp.Model"
             xmlns:viewModel ="clr-namespace:PrimeDocs.ConnectClient.WinApp.ViewModel"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:w="clr-namespace:PrimeDocs.ConnectClient.WinApp.Helpers"
             xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:behaviour="clr-namespace:PrimeDocs.ConnectClient.WinApp.Helpers"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             Dialog:DialogParticipation.Register="{Binding}"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1100">
    <UserControl.Resources>
        <w:BooleanToVisibilityConverter x:Key="TrueToVisibleConverter" />
        <w:BooleanToVisibilityConverter x:Key="FalseToVisibleConverter" IsReversed="True" />
        <w:MultiValueConverter x:Key="ConvertMultipleValues" />
        <Style x:Key="ActiveDocFuncListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#ff8080"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#ffb3b3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <DockPanel>
            <Border BorderBrush="{StaticResource ThumbBrush}" BorderThickness="0,0,1,0">
                <Grid>
                    <fa:ImageAwesome Icon="exclamation" Height="25" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="Red" Margin="100,5,20,0" Visibility="{Binding Path=Request.WarningVisibility, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding Path=Request.WarningMessage, UpdateSourceTrigger=PropertyChanged}" />
                    <TabControl Margin="4" DockPanel.Dock="Left">
                        <TabItem Header="History">
                            <DockPanel>
                                <Grid DockPanel.Dock="Bottom" Margin="0,20,0,20">
                                    <Button Style="{DynamicResource SquareButtonStyle}" MinWidth="98" Height="28" VerticalAlignment="Center" HorizontalAlignment="Right" Content="Clear" Command="{Binding Path=Clear}"/>
                                </Grid>
                                <Grid>
                                    <ListBox ItemContainerStyle="{StaticResource ActiveDocFuncListBoxItem}" Name="ListBox1" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectedItem="{Binding Path=SelectedLogItem }"
                                ItemsSource="{Binding Path=Request.Log, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Width="250">
                                        <ListBox.InputBindings>
                                            <KeyBinding Key="F2" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EditHistoryName}" CommandParameter="{Binding SelectedItem, ElementName=ListBox1}" />
                                            <KeyBinding Key="Enter" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EnterHistoryNameChanges}" />
                                            <KeyBinding Key="Esc" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EnterHistoryNameChanges}" />
                                        </ListBox.InputBindings>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding Path=LoadHistory}"
                                                     CommandParameter="{Binding SelectedItem, ElementName=ListBox1}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EnterHistoryNameChanges}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <Grid Height="26">
                                                        <StackPanel Orientation="Horizontal" ToolTip="{Binding Path=HistoryToolTip}">
                                                            <fa:ImageAwesome Margin="4,0,0,0" Icon="{Binding Path=ActionIcon}" Height="16" Foreground="{Binding Path=ResponseColor}" />
                                                            <TextBlock Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14" Margin="4,0,0,0" VerticalAlignment="Center" Visibility="{Binding Path=IsEditing, Converter={StaticResource FalseToVisibleConverter}}" />
                                                            <TextBox IsVisibleChanged="TextBox_VisibleChanged" Name="NameBox1" Text="{Binding Path=EditName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14" Margin="4,0,0,0" VerticalAlignment="Center" Visibility="{Binding Path=IsEditing, Converter={StaticResource TrueToVisibleConverter}}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="LostFocus">
                                                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EnterHistoryNameChanges}" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>
                                                        </StackPanel>
                                                        <Button HorizontalAlignment="Right" Height="16" Margin="8,4,4,4" Command="{Binding Path=DeleteValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding}">
                                                            <Button.Style>
                                                                <Style TargetType="Button">
                                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True" >
                                                                            <Setter Property="Button.Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True" >
                                                                            <Setter Property="Button.Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                            <fa:ImageAwesome Icon="Trash"  />
                                                        </Button>
                                                        <Button HorizontalAlignment="Right" Height="16" Margin="8,4,24,4" Command="{Binding Path=ChangeIsFavorite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding}">
                                                            <Button.Style>
                                                                <Style TargetType="Button">
                                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True" >
                                                                            <Setter Property="Button.Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True" >
                                                                            <Setter Property="Button.Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Path=IsFavorite, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                            <Setter Property="Button.Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                            <fa:ImageAwesome Icon="{Binding Path=FavoriseIcon, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  />
                                                        </Button>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Favorites">
                            <DockPanel>
                                <Grid DockPanel.Dock="Bottom" Margin="0,20,0,20">
                                    <Button Style="{DynamicResource SquareButtonStyle}" MinWidth="98" Height="28" VerticalAlignment="Center" HorizontalAlignment="Right" Content="Clear" Command="{Binding Path=Clear}"/>
                                </Grid>
                                <Grid>
                                    <ListBox ItemContainerStyle="{StaticResource ActiveDocFuncListBoxItem}" Name="ListBox2" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectedItem="{Binding Path=SelectedLogItem }"
                                ItemsSource="{Binding Path=Request.FavoriteLog, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Width="250">
                                        <ListBox.InputBindings>
                                            <KeyBinding Key="F2" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EditHistoryName}" CommandParameter="{Binding SelectedItem, ElementName=ListBox2}" />
                                            <KeyBinding Key="Enter" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EnterHistoryNameChanges}" />
                                            <KeyBinding Key="Esc" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EnterHistoryNameChanges}" />
                                        </ListBox.InputBindings>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding Path=LoadHistory}"
                                                     CommandParameter="{Binding SelectedItem, ElementName=ListBox2}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EnterHistoryNameChanges}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <Grid Height="26">
                                                        <StackPanel Orientation="Horizontal" ToolTip="{Binding Path=HistoryToolTip}">
                                                            <fa:ImageAwesome Margin="4,0,0,0" Icon="{Binding Path=ActionIcon}" Height="16" Foreground="{Binding Path=ResponseColor}" />
                                                            <TextBlock Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14" Margin="4,0,0,0" VerticalAlignment="Center" Visibility="{Binding Path=IsEditing, Converter={StaticResource FalseToVisibleConverter}}" />
                                                            <TextBox IsVisibleChanged="TextBox_VisibleChanged" Name="NameBox2" Text="{Binding Path=EditName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14" Margin="4,0,0,0" VerticalAlignment="Center" Visibility="{Binding Path=IsEditing, Converter={StaticResource TrueToVisibleConverter}}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="LostFocus">
                                                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EnterHistoryNameChanges}" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>
                                                        </StackPanel>
                                                        <Button HorizontalAlignment="Right" Height="16" Margin="8,4,4,4" Command="{Binding Path=DeleteValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding}">
                                                            <Button.Style>
                                                                <Style TargetType="Button">
                                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True" >
                                                                            <Setter Property="Button.Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True" >
                                                                            <Setter Property="Button.Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                            <fa:ImageAwesome Icon="Trash"  />
                                                        </Button>
                                                        <Button HorizontalAlignment="Right" Height="16" Margin="8,4,24,4" Command="{Binding Path=ChangeIsFavorite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding}">
                                                            <Button.Style>
                                                                <Style TargetType="Button">
                                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True" >
                                                                            <Setter Property="Button.Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True" >
                                                                            <Setter Property="Button.Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Path=IsFavorite, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                            <Setter Property="Button.Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                            <fa:ImageAwesome Icon="{Binding Path=FavoriseIcon, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  />
                                                        </Button>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Border>
            <TabControl Margin="4" SelectedIndex="{Binding Path=Request.SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Focusable="False">
                <TabItem Header="Server (Defect)" TabIndex="0">
                    <DockPanel LastChildFill="True" >
                        <Grid DockPanel.Dock="Top" Margin="0,0,0,15" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="140*"/>
                                <ColumnDefinition Width="733*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Server:"  HorizontalAlignment="Left" Margin="0,3,0,0" />
                            <TextBox Text="{Binding Path=Request.Url, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="60,0,0,0" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" />
                        </Grid>
                        <Grid DockPanel.Dock="Bottom" Margin="0,20,0,20">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" DockPanel.Dock="Bottom">
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Clear Input" Command="{Binding Path=ClearInput}" MinWidth="98" Height="28" VerticalAlignment="Center" HorizontalAlignment="Right"  />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <fa:FontAwesome Icon="LightbulbOutline" VerticalAlignment="Center" Margin="0,0,8,0" HorizontalAlignment="Center">
                                    <fa:FontAwesome.ToolTip>
                                        <ToolTip>
                                            <TextBlock TextAlignment="Left">
                                                <Run Text="These placeholders are available when using Advanced-Mode:" />
                                                <LineBreak />
                                                <Run Text="$(GUID): Will be replaced with a random Guid." />
                                            </TextBlock>
                                        </ToolTip>
                                    </fa:FontAwesome.ToolTip>    
                                </fa:FontAwesome>
                                <Button Style="{DynamicResource SquareButtonStyle}" MinWidth="98" Height="28" VerticalAlignment="Center" Margin="0,0,8,0" Content="Validate" Command="{Binding Validate}"/>
                                <Button Style="{DynamicResource SquareButtonStyle}" MinWidth="98" Height="28" VerticalAlignment="Center" Margin="0,0,8,0" Content="Advanced" Command="{Binding OpenAdvSettings}" />
                                <Button Style="{DynamicResource SquareButtonStyle}" MinWidth="98" Height="28" VerticalAlignment="Center" Margin="0,0,8,0" Content="Send" Command="{Binding Path=Send}" HorizontalAlignment="Right" />
                            </StackPanel>
                        </Grid>
                        <Grid>
                            <Grid Height="60" Width="400" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="240" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Username:" Margin="0,3,0,5"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=Request.Username, UpdateSourceTrigger=PropertyChanged }" Width="240" Margin="0,0,0,5" />
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Password:" Margin="0,3,0,0"  />
                                <PasswordBox Grid.Row="1" Grid.Column="1" Width="240" w:PasswordHelper.Attach="True"
             w:PasswordHelper.Password="{Binding Path=Request.Password, Mode=TwoWay}"  />
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Path=Request.Password, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding PwVisibility}" />
                                <CheckBox Name="checkPw"  Grid.Row="1" Grid.Column="2" Margin="4,0,0,0" Command="{Binding Path=Checkbox }" Content="Show" CommandParameter="{Binding IsChecked, ElementName=checkPw}" />
                            </Grid>
                            <TextBox Margin="0,65,0,0" ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding Path=Request.XmlString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AllowDrop="True" PreviewDragOver="TextBox_PreviewDragOver"  PreviewDrop="TextBox_PreviewDrop" ></TextBox>
                            <avalonEdit:TextEditor  WordWrap="True"
                                                        ShowLineNumbers="True"
                                                        LineNumbersForeground="Purple" 
                                                        Name="textEditor" 
                                                        SyntaxHighlighting="XML" 
                                                        Background="White" 
                                                        Margin="0,65,0,0" 
                                                        ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                        BorderBrush="{StaticResource TextBoxBorderBrush}" 
                                                        BorderThickness="1"
                                                        AllowDrop="True" 
                                                        PreviewDragOver="TextBox_PreviewDragOver"  
                                                        PreviewDrop="TextBox_PreviewDrop">
                                <i:Interaction.Behaviors>
                                    <behaviour:AvalonEditBehaviour GiveMeTheText="{Binding Path=Request.XmlString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </i:Interaction.Behaviors>
                            </avalonEdit:TextEditor>
                        </Grid>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Client" TabIndex="1">
                    <DockPanel>
                        <Grid DockPanel.Dock="Top" Margin="0,0,0,15">
                            <TextBox Text="{Binding Path=Request.Directory, Mode=TwoWay , UpdateSourceTrigger=PropertyChanged}"  Margin="0,0,98,0" HorizontalAlignment="Stretch" />
                            <Button Style="{DynamicResource SquareButtonStyle}" Content="Browse" Command="{Binding Path=Browse}" HorizontalAlignment="Right" Width="98"/>
                        </Grid>
                        <Grid DockPanel.Dock="Bottom">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" DockPanel.Dock="Bottom">
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Clear Input" Command="{Binding Path=ClearInput}" Margin="0,20,0,20" Width="98" HorizontalAlignment="Right"  />
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button Style="{DynamicResource SquareButtonStyle}" MinWidth="98" Height="28" VerticalAlignment="Center" Margin="0,0,8,0" Content="Validate" Command="{Binding Validate}"/>
                                <Button Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Right" Margin="0,20,0,20" Width="98" Content="OK" Command="{Binding Path=Connect }"/>
                            </StackPanel>
                        </Grid>
                        <avalonEdit:TextEditor  WordWrap="True"
                                                        ShowLineNumbers="True"
                                                        LineNumbersForeground="Purple" 
                                                        Name="textEditorClient" 
                                                        SyntaxHighlighting="XML" 
                                                        Background="White"
                                                        ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                        BorderBrush="{StaticResource TextBoxBorderBrush}" 
                                                        BorderThickness="1"
                                                        AllowDrop="True" 
                                                        PreviewDragOver="TextBox_PreviewDragOver"  
                                                        PreviewDrop="TextBox_PreviewDrop">
                            <i:Interaction.Behaviors>
                                <behaviour:AvalonEditBehaviour GiveMeTheText="{Binding Path=Request.XmlString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </i:Interaction.Behaviors>
                        </avalonEdit:TextEditor>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
    </Grid>
</UserControl>
